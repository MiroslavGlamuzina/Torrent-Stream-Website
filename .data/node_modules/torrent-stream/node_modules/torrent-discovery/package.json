{
  "name": "torrent-discovery",
  "description": "Discover BitTorrent and WebTorrent peers",
  "version": "5.3.2",
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "http://feross.org/"
  },
  "browser": {
    "bittorrent-dht/client": false
  },
  "bugs": {
    "url": "https://github.com/feross/torrent-discovery/issues"
  },
  "dependencies": {
    "bittorrent-dht": "^6.0.0",
    "bittorrent-tracker": "^7.0.0",
    "debug": "^2.0.0",
    "inherits": "^2.0.1",
    "re-emitter": "^1.0.0",
    "run-parallel": "^1.1.2",
    "xtend": "^4.0.0"
  },
  "devDependencies": {
    "hat": "0.0.3",
    "standard": "^5.1.0",
    "tape": "^4.0.0"
  },
  "keywords": [
    "webtorrent",
    "torrent",
    "bittorrent",
    "peers",
    "discovery",
    "tracker",
    "dht",
    "trackers",
    "find peers",
    "peer-to-peer",
    "peer discovery"
  ],
  "license": "MIT",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/torrent-discovery.git"
  },
  "scripts": {
    "test": "standard && tape test/*.js"
  },
  "readme": "# torrent-discovery [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url]\n\n[travis-image]: https://img.shields.io/travis/feross/torrent-discovery/master.svg?style=flat\n[travis-url]: https://travis-ci.org/feross/torrent-discovery\n[npm-image]: https://img.shields.io/npm/v/torrent-discovery.svg?style=flat\n[npm-url]: https://npmjs.org/package/torrent-discovery\n[downloads-image]: https://img.shields.io/npm/dm/torrent-discovery.svg?style=flat\n[downloads-url]: https://npmjs.org/package/torrent-discovery\n\n### Discover BitTorrent and WebTorrent peers\n\nThis module bundles [bittorrent-dht](https://github.com/feross/bittorrent-dht) and\n[bittorrent-tracker](https://github.com/feross/bittorrent-tracker) clients and exposes a\nsingle API for discovering BitTorrent peers via both discovery methods.\n\n### features\n\n- simple API\n- find peers from trackers and the DHT\n- automatically announces, so other peers can discover us\n- can start finding peers with just an info hash, before full metadata is available\n\nThis module also **works in the browser** with [browserify](http://browserify.org). In\nthat context, it discovers [WebTorrent](http://webtorrent.io) (WebRTC) peers.\n\n### install\n\n```\nnpm install torrent-discovery\n```\n\n### api\n\n#### `discovery = new Discovery(opts)`\n\nCreate a new peer discovery instance. Required options are:\n\n```\n{\n  peerId: '', // as utf8 string or Buffer\n  port: 0     // torrent client port (only required in node)\n}\n```\n\nOptional options are:\n\n```\n{\n  announce: [],  // force list of announce urls to use (from magnet uri)\n  dht: true,     // use dht? also, can optionally pass in global DHT instance to use\n  tracker: true, // use trackers?\n  rtcConfig: {}, // RTCPeerConnection config object (only used in browser)\n  wrtc: {}       // custom webrtc implementation, mainly useful in node to specify in the [wrtc](https://npmjs.com/package/wrtc) package\n}\n```\n\n**This module automatically handles announcing to the DHT, for maximum peer discovery.**\n\n#### `discovery.setTorrent(infoHashOrTorrent)`\n\nWhen you learn the infoHash (hex string) of the torrent, call this method to begin\nsearching for peers.\n\nLater, when you get the full torrent metadata (parsed via [parse-torrent](https://github.com/feross/parse-torrent)), call this method again to ensure more accurate tracker stats\n(because we now know the torrent length).\n\n#### `discovery.updatePort(port)`\n\nWhen the port that the torrent client is listening on changes, call this method to\nreannounce to the tracker and DHT with the new port.\n\n#### `discovery.stop()`\n\nDestroy and cleanup the DHT and tracker instances.\n\n### events\n\n#### `discovery.on('peer', function (peer) {})`\n\nEmitted whenever a new peer is discovered.\n\n**In node**, `peer` is a string in the form `12:34:56:78:4000`.\n\n**In the browser**, `peer` is an instance of\n[`simple-peer`](https://github.com/feross/simple-peer), a small wrapper around a WebRTC\npeer connection.\n\n#### `discovery.on('dhtAnnounce', function () {})`\n\nEmitted whenever an `announce` message has been sent to the DHT.\n\n#### `discovery.on('warning', function (err) {})`\n\nEmitted when there is a non-fatal DHT or tracker error, like an inaccessible tracker\nserver. Useful for logging. This is non-fatal.\n\n#### `discovery.on('error', function (err) {})`\n\nEmitted when there is a fatal, unrecoverable DHT or tracker error.\n\n### license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n\n",
  "readmeFilename": "README.md",
  "_id": "torrent-discovery@5.3.2",
  "_from": "torrent-discovery@^5.2.0"
}
