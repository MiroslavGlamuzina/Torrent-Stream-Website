{
  "name": "immediate-chunk-store",
  "description": "Immediate put/get for abstract-chunk-store compliant stores",
  "version": "1.0.8",
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "http://feross.org/"
  },
  "bugs": {
    "url": "https://github.com/feross/immediate-chunk-store/issues"
  },
  "dependencies": {},
  "devDependencies": {
    "abstract-chunk-store": "^1.0.0",
    "fs-chunk-store": "^1.3.0",
    "memory-chunk-store": "^1.1.1",
    "standard": "^6.0.4",
    "tape": "^4.1.0"
  },
  "homepage": "https://github.com/feross/immediate-chunk-store",
  "keywords": [
    "abstract-chunk-store",
    "chunk",
    "in-memory",
    "immediate",
    "sync",
    "cache",
    "store"
  ],
  "license": "MIT",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/immediate-chunk-store.git"
  },
  "scripts": {
    "test": "standard && node test"
  },
  "readme": "# immediate-chunk-store [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url]\n\n[travis-image]: https://img.shields.io/travis/feross/immediate-chunk-store/master.svg\n[travis-url]: https://travis-ci.org/feross/immediate-chunk-store\n[npm-image]: https://img.shields.io/npm/v/immediate-chunk-store.svg\n[npm-url]: https://npmjs.org/package/immediate-chunk-store\n[downloads-image]: https://img.shields.io/npm/dm/immediate-chunk-store.svg\n[downloads-url]: https://npmjs.org/package/immediate-chunk-store\n\n#### Immediate put/get for [abstract-chunk-store](https://github.com/mafintosh/abstract-chunk-store) compliant stores\n\nMakes `store.put()` chunks immediately available for `store.get()`, even before the\n`store.put()` callback is called. Data is stored in memory until the `store.put()`\nis complete.\n\n## Install\n\n```\nnpm install immediate-chunk-store\n```\n\n## Usage\n\n``` js\nvar ImmediateChunkStore = require('immediate-chunk-store')\nvar FSChunkStore = require('fs-chunk-store') // any chunk store will work\n\nvar store = new ImmediateChunkStore(new FSChunkStore(10))\n\nstore.put(0, new Buffer('abc'), function () { /* yolo */ })\n\n// And now, get the same chunk out BEFORE the put is complete\nstore.get(0, function (err, data) {\n  if (err) throw err\n  console.log(data.toString()) // 'abc'\n})\n```\n\n## License\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n",
  "readmeFilename": "README.md",
  "_id": "immediate-chunk-store@1.0.8",
  "_from": "immediate-chunk-store@^1.0.5"
}
