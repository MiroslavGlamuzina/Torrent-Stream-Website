{
  "name": "re-emitter",
  "description": "Re emit events from another emitter",
  "version": "1.1.1",
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/feross/re-emitter/issues",
    "email": "raynos2@gmail.com"
  },
  "contributors": [
    {
      "name": "Jake Verbaten"
    },
    {
      "name": "Feross Aboukhadijeh",
      "email": "feross@feross.org",
      "url": "http://feross.org/"
    }
  ],
  "dependencies": {},
  "devDependencies": {
    "standard": "^3.3.2",
    "tape": "^4.0.0",
    "zuul": "^3.0.0"
  },
  "homepage": "https://github.com/feross/re-emitter",
  "keywords": [
    "reemit",
    "re emit",
    "re-emit",
    "reemitter",
    "filter events",
    "events",
    "emitter"
  ],
  "license": "MIT",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/re-emitter.git"
  },
  "scripts": {
    "test": "standard && npm run test-node && npm run test-browser",
    "test-browser": "zuul -- test/*.js",
    "test-browser-local": "zuul --local -- test/*.js",
    "test-node": "tape test/*.js"
  },
  "readme": "# re-emitter [![travis](https://img.shields.io/travis/feross/re-emitter.svg)](https://travis-ci.org/feross/re-emitter) [![npm](https://img.shields.io/npm/v/re-emitter.svg)](https://npmjs.org/package/re-emitter) [![downloads](https://img.shields.io/npm/dm/re-emitter.svg)](https://npmjs.org/package/re-emitter)\n\n#### Re emit events from another emitter\n\n![reemit](https://raw.githubusercontent.com/feross/re-emitter/master/img.jpg)\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/magnet-uri.svg)](https://saucelabs.com/u/magnet-uri)\n\nWorks in node and the browser with [browserify](http://browserify.org/).\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\n### install\n\n```\nnpm install re-emitter\n```\n\n### usage\n\n```js\nvar reemit = require('re-emitter')\n\nvar emitter = new EventEmitter()\nvar other = new EventEmitter()\n\nreemit(emitter, other, ['foo', 'bar'])\n\nother.on('foo', function () {\n  // foo will fire on other emitter!\n})\n\nemitter.emit('foo')\n\nother.on('baz', function () {\n  // baz will not fire on other emitter\n})\n\nemitter.emit('baz')\n```\n\n#### canceling re-emitting\n\n`reemit` returns a `function`, which when called, cancels all re-emitting by removing the\nevent listeners which it added.\n\n### contributors\n\n- Raynos\n- Feross\n\n### license\n\nMIT. Copyright (c) Raynos.\n",
  "readmeFilename": "README.md",
  "_id": "re-emitter@1.1.1",
  "_from": "re-emitter@^1.0.0"
}
